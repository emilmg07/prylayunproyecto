<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Pick1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>